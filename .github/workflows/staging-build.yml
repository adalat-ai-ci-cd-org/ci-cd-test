name: Bump version and update image.tag

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Allows creating and pushing tags 
  packages: read
  pull-requests: write 

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Install yq
        run: |
          ls -la
          sudo apt-get update && sudo apt-get install -y jq
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - name: Generate GitHub App Token
        uses: actions/create-github-app-token@v1
        id: generate-token
        with:
          app-id: 1172473
          private-key: ${{ secrets.CI_CD_SECRET }}

      - name: Debug Token Access
        run: |
          echo "Checking token permissions..."
          curl -H "Authorization: Bearer ${{ steps.generate-token.outputs.token }}" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/user"

      - name: Check Token Scope
        run: |
          curl -H "Authorization: Bearer ${{ steps.generate-token.outputs.token }}" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/installation/repositories"

      - name: Clone the Second Repo
        run: |
          git clone --single-branch --branch alpha https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com/adalat-ai-ci-cd-org/ci-cd-charts-test.git second-repo
          cd second-repo
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Configure Git User
        run: |
          git config --global user.name "mura108"
          git config --global user.email "mura@adalat.ai"

      - name: Update image.tag in values.yaml
        run: |
          cd second-repo
          echo "Current directory: $(pwd)"
          ls -la ci-cd-test
          NEW_TAG=${{ steps.tag_version.outputs.new_tag }}
          echo "Updating image.tag to ${NEW_TAG}"
          yq eval -i ".image.tag = \"${NEW_TAG}\"" ci-cd-test/values.yaml
          cat ci-cd-test/values.yaml  # for debugging

      - name: Check Authenticated User
        run: |
          gh auth status
          git config --get remote.origin.url
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.generate-token.outputs.token }}
          commit-message: "Updated image.tag to ${{ steps.tag_version.outputs.new_tag }}"
          title: "Automated Update: image.tag to ${{ steps.tag_version.outputs.new_tag }}"
          body: "This PR updates the image tag to `${{ steps.tag_version.outputs.new_tag }}`."
          branch: ci-cd-update-image-tag
          delete-branch: true
          base: alpha

      # - name: Commit and push changes
      #   run: |
      #     cd second-repo

      #     NEW_TAG=${{ steps.tag_version.outputs.new_tag }}
      #     echo "new tag value is ${NEW_TAG}"

      #     git add ci-cd-test/values.yaml
      #     git commit -m "Updated image.tag to ${NEW_TAG}" || echo "No changes to commit"

      #     # Set the correct authentication URL
      #     git push origin alpha
      #   env:
      #     GIT_ASKPASS: echo "x-access-token:${{ steps.generate-token.outputs.token }}"